@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWorkContext workContext;
<div class="footer">
    <div class="footer-upper">
        <div class="footer-block information">
            <div class="title">
                <strong>@T("Footer.Information")</strong>
            </div>
            <ul class="list">
                @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                {
                    <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                }
                @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                {
                    <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                }
                @if (Model.DisplayContactUsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                }
            </ul>
        </div>
        <div class="footer-block customer-service">
            <div class="title">
                <strong>@T("Footer.CustomerService")</strong>
            </div>
            <ul class="list">
                @if (Model.DisplayProductSearchFooterItem)
                {
                    <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a> </li>
                }
                @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li>
                }
                @if (Model.BlogEnabled && Model.DisplayBlogFooterItem)
                {
                    <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                }
                @if (Model.ForumEnabled && Model.DisplayForumsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                }
                @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                }
                @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                }
                @if (Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                }
                @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                {
                    <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a></li>
                }
                @if (Model.AllowCustomersToCheckGiftCardBalance)
                {
                    <li><a href="@Url.RouteUrl("CheckGiftCardBalance")">@T("CheckGiftCardBalance")</a></li>
                }
            </ul>
        </div>
        <div class="footer-block my-account">
            <div class="title">
                <strong>@T("Footer.MyAccount")</strong>
            </div>
            <ul class="list">
                @if (Model.DisplayCustomerInfoFooterItem)
                {
                    <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                }
                @if (Model.DisplayCustomerOrdersFooterItem)
                {
                    <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                }
                @if (Model.DisplayCustomerAddressesFooterItem)
                {
                    <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                }
                @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                {
                    <li><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
                }
                @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                {
                    <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                }
                @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                {
                    <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                }
                @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                {
                    <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a></li>
                }
            </ul>
        </div>
        <div class="footer-block follow-us">
            <div class="social">
                <div class="title">
                    <strong>@T("Footer.FollowUs")</strong>
                </div>
                @await Component.InvokeAsync("SocialButtons")
            </div>
            <div class="FooterLogo">
                <a href="/"> <img alt="zadaak" src="https://www.zadaak.com/images/thumbs/0000940_website.png"> </a>
            </div>
            <div class="footerPhone">
                <div class="ContactUsPhone"><i class="fa fa-phone" aria-hidden="true"></i><p>+96566415449</p></div>
            </div>
            @*@await Component.InvokeAsync("NewsletterBox")*@
        </div>
    </div>
    <div class="footer-lower">
        <div class="footer-info">
            @*<span class="footer-disclaimer">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</span>*@
            @if (Model.DisplayTaxShippingInfoFooter)
            {
                var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                <span class="footer-tax-shipping">
                    @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                </span>
            }
        </div>
        @if (!Model.HidePoweredByNopCommerce)
        {
            <div class="footer-powered-by">
                Powered by <a href="https://www.zadaak.com">Zadaak.com</a>
            </div>
        }
        @await Component.InvokeAsync("StoreThemeSelector")
    </div>
    <div class="backTop">
        <a id="backTop">
            <i class="fa fa-chevron-up" aria-hidden="true"></i>
        </a>
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
</div>

<script src="~/../Themes/DefaultClean/Content/js/swiper-bundle.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css">
<script asp-location="Footer">
    $(document).ready(function () {
        $('.footer-block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 769) {
                $(this).siblings('.list').slideToggle('slow');
            }
        });
    });
</script>
<script asp-location="Footer">
    $(document).ready(function () {
     
        //Click event to scroll to top
        $('.backTop').click(function () {
            $('html, body').animate({ scrollTop: 0 }, 800);
            return false;
        });
        //Check to see if the window is top if not then display button
        $(window).scroll(function () {
            if ($(this).scrollTop() > 200) {
                $('.backTop').fadeIn();
            } else {
                $('.backTop').fadeOut();
            }
        });


        $('.block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 1001) {
                $(this).siblings('.listbox').slideToggle('slow');
            }
        });


        $(".filterBtn").click(function () {
            $(".filter-content").toggle(450);
        });

        $(".fa.fa-search").click(function () {
            $(".header-links-wrapper").slideUp();
            $(".search-box.store-search-box").slideToggle();
        });

        $(".fa.fa-user").click(function () {
            $(".search-box.store-search-box").slideUp();
            $(".header-links-wrapper").slideToggle();
        });

        //$(".fa.fa-shopping-cart").click(function () {
        //    $(".search-box.store-search-box").slideUp();
        //    $(".header-links-wrapper").slideToggle();
        //});


        var sticky_navigation_offset_top = $('.header-lower').offset().top + 65;
        var sticky_navigation = function () {
            var scroll_top = $(window).scrollTop();
            if (scroll_top > sticky_navigation_offset_top) {
                //$('.header-lower').css({
                //    'position': 'fixed',
                //    'top': 0,
                //    'z-index': '9999',
                //    'width': '100%',
                //});
                $(".header-lower").addClass("FixedHead");
                //$(".FixedHead").addClass("FixedHead");
            } else {
                //$('.header-lower').css({
                //    'position': 'relative',
                //    'top': 0,
                //    'z-index': '0',
                //});
                $(".header-lower").removeClass("FixedHead");
            }
        };
        sticky_navigation();
        $(window).scroll(function () {
            sticky_navigation();
        });
        $('a[href="#"]').click(function (event) {
            event.preventDefault();
        });

        $(".MenuInMobileVer").click(function () {
            $(".MenuNewVer").slideToggle(450);
        });

        $(".group.product-spec-group .title").click(function () {
            $('.group.product-spec-group .item').slideUp()
            $(this).parent().children('.item').slideToggle();
        });


        var swiper = new Swiper('.swiper-container', {
            spaceBetween: 15,
            centeredSlides: false,
            autoplay: {
                delay: 2500,
                disableOnInteraction: false,
            },
            pagination: {
                el: '.swiper-pagination',
                clickable: true,
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            breakpoints: {
                320: {
                    slidesPerView: 2,
                    spaceBetween: 30,
                },
                640: {
                    slidesPerView: 4,
                    spaceBetween: 30,
                },
                768: {
                    slidesPerView: 5,
                    spaceBetween: 30,
                },
                1024: {
                    slidesPerView: 6,
                    spaceBetween: 30,
                },
            }
        });
    });
</script>